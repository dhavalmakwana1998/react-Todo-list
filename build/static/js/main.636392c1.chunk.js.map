{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","inputData","setInputData","todo","setTodo","complete","setComplete","className","type","placeholder","value","onChange","e","target","onClick","trim","alert","length","id","map","item","ind","newData","filter","elem","done","removeItem","newcData","removeCompleteItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOAgIeA,MA5Hf,WACE,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwBF,mBAAS,CAAC,SAAU,uBAA5C,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KAwCA,OACE,qBAAKC,UAAU,MAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,WAAf,SACE,sBAAKA,UAAU,yBAAf,UACE,uCACA,sBAAKA,UAAU,mBAAf,UACE,uBACEC,KAAK,OACLD,UAAU,wBACVE,YAAY,WACZC,MAAOT,EACPU,SAAU,SAACC,GAAD,OAAOV,EAAaU,EAAEC,OAAOH,UAEzC,qBAAKH,UAAU,qBAAf,SACE,sBAAMA,UAAU,GAAhB,SACE,wBACEA,UAAU,4BACVO,QAzDpB,WACOb,GAAcA,EAAUc,QAI3BX,EAAQ,GAAD,mBAAKD,GAAL,CAAWF,KAClBC,EAAa,MAJbc,MAAM,mBACNd,EAAa,MAoDC,SAIE,mBAAGK,UAAU,wBAKrB,wBAAQO,QAtDpB,WACMX,EAAKc,QAAU,EACjBD,MAAM,aAENZ,EAAQ,IACRE,EAAY,GAAD,mBAAKD,GAAL,YAAkBF,OAiDOI,UAAU,0BAAtC,8BAIA,uBACA,oBAAIW,GAAG,WAAWX,UAAU,gBAA5B,SACGJ,EAAKgB,KAAI,SAACC,EAAMC,GACf,OACE,oBAAId,UAAU,mBAAd,SACE,sBAAKA,UAAU,2DAAf,UACGa,EACD,mBACEN,QAAS,kBAzDjC,SAAoBI,GAClB,IAAMI,EAAUnB,EAAKoB,QAAO,SAACC,EAAMH,GACjC,OAAOA,IAAQH,KAEjBd,EAAQkB,GAER,IAAMG,EAAOtB,EAAKoB,QAAO,SAACC,EAAMH,GAC9B,OAAOA,IAAQH,KAEjBZ,EAAY,GAAD,mBAAKD,GAAL,CAAeoB,KAgDWC,CAAWL,IAC1Bd,UAAU,gCALsBc,EAAM,QAYlD,sBAAKd,UAAU,cAAf,UACE,iCACE,uBAAMA,UAAU,cAAhB,UAA+BJ,EAAKc,OAApC,SAFJ,qBASJ,qBAAKV,UAAU,oBAAf,SACE,sBAAKA,UAAU,qBAAf,UACE,8CACA,oBAAIW,GAAG,aAAaX,UAAU,gBAA9B,SACGF,EAASc,KAAI,SAACC,EAAMC,GACnB,OACE,qBAAId,UAAU,iCAAd,UACGa,EACD,wBAAQb,UAAU,2CAAlB,SACE,mBACEA,UAAU,eACVO,QAAS,kBAzEjC,SAA4BI,GAC1B,IAAMS,EAAWtB,EAASkB,QAAO,SAACC,EAAMH,GACtC,OAAOA,IAAQH,KAEjBZ,EAAYqB,GAqEyBC,CAAmBP,UALYA,qBChGzDQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.636392c1.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nfunction App() {\r\n  const [inputData, setInputData] = useState(\"\");\r\n  const [todo, setTodo] = useState([\"Dhaval\", \"Take out the trash\"]);\r\n  const [complete, setComplete] = useState([]);\r\n\r\n  function addTodo() {\r\n    if (!inputData || !inputData.trim()) {\r\n      alert(\"please add data\");\r\n      setInputData(\"\");\r\n    } else {\r\n      setTodo([...todo, inputData]);\r\n      setInputData(\"\");\r\n    }\r\n  }\r\n\r\n  function removeAll() {\r\n    if (todo.length <= 0) {\r\n      alert(\"All Read\");\r\n    } else {\r\n      setTodo([]);\r\n      setComplete([...complete, ...todo]);\r\n    }\r\n  }\r\n\r\n  function removeItem(id) {\r\n    const newData = todo.filter((elem, ind) => {\r\n      return ind !== id;\r\n    });\r\n    setTodo(newData);\r\n\r\n    const done = todo.filter((elem, ind) => {\r\n      return ind === id;\r\n    });\r\n    setComplete([...complete, done]);\r\n  }\r\n\r\n  function removeCompleteItem(id) {\r\n    const newcData = complete.filter((elem, ind) => {\r\n      return ind !== id;\r\n    });\r\n    setComplete(newcData);\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <div className=\"card todolist not-done\">\r\n              <h1>Todos</h1>\r\n              <div className=\"input-group mb-3\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control add-todo\"\r\n                  placeholder=\"Add todo\"\r\n                  value={inputData}\r\n                  onChange={(e) => setInputData(e.target.value)}\r\n                />\r\n                <div className=\"input-group-append\">\r\n                  <span className=\"\">\r\n                    <button\r\n                      className=\"btn btn-success rounded-0\"\r\n                      onClick={addTodo}\r\n                    >\r\n                      <i className=\"fa fa-plus\"></i>\r\n                    </button>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              <button onClick={removeAll} className=\"btn btn-outline-success\">\r\n                Mark all as done\r\n              </button>\r\n\r\n              <hr />\r\n              <ul id=\"sortable\" className=\"list-unstyled\">\r\n                {todo.map((item, ind) => {\r\n                  return (\r\n                    <li className=\"ui-state-default\" key={ind + 1}>\r\n                      <div className=\"font-weight-bold checkbox d-flex justify-content-between\">\r\n                        {item}\r\n                        <i\r\n                          onClick={() => removeItem(ind)}\r\n                          className=\"fa fa-trash text-danger\"\r\n                        ></i>\r\n                      </div>\r\n                    </li>\r\n                  );\r\n                })}\r\n              </ul>\r\n              <div className=\"todo-footer\">\r\n                <strong>\r\n                  <span className=\"count-todos\">{todo.length} </span>\r\n                </strong>\r\n                Items Left\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-md-6 p-4 my-2\">\r\n            <div className=\"card p-4 stodolist\">\r\n              <h1>Already Done</h1>\r\n              <ul id=\"done-items\" className=\"list-unstyled\">\r\n                {complete.map((item, ind) => {\r\n                  return (\r\n                    <li className=\"d-flex justify-content-between\" key={ind}>\r\n                      {item}\r\n                      <button className=\"btn btn-outline-success btn-sm py-0 my-0\">\r\n                        <i\r\n                          className=\"fa fa-remove\"\r\n                          onClick={() => removeCompleteItem(ind)}\r\n                        ></i>\r\n                      </button>\r\n                    </li>\r\n                  );\r\n                })}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}