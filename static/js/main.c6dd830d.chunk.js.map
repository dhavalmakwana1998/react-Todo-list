{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","inputData","setInputData","id","task","todo","setTodo","complete","setComplete","isEdit","setIsEdit","editTodo","setEditTodo","addTodo","trim","map","elem","allInput","Date","getTime","toString","alert","className","type","placeholder","value","onChange","e","target","onClick","length","item","editItem","find","addtoDone","newData","filter","removeItem","newcData","addtoDo","removeCompleteItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c6dd830d.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nfunction App() {\r\n  const [inputData, setInputData] = useState(\"\");\r\n  const [todo, setTodo] = useState([{ id: 1, task: \"AP\" }]);\r\n  const [complete, setComplete] = useState([{ id: 101, task: \"DM\" }]);\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [editTodo, setEditTodo] = useState(null);\r\n\r\n  function addTodo() {\r\n    if (!inputData || !inputData.trim()) {\r\n      alert(\"please add data\");\r\n      setInputData(\"\");\r\n    } else if (inputData && isEdit) {\r\n      setTodo(\r\n        todo.map((elem) => {\r\n          if (elem.id === editTodo) {\r\n            return { ...elem, task: inputData };\r\n            // console.log(...elem);\r\n          }\r\n          return elem;\r\n        })\r\n      );\r\n      setInputData(\"\");\r\n      setIsEdit(false);\r\n      setEditTodo(null);\r\n    } else {\r\n      const allInput = { id: new Date().getTime().toString(), task: inputData };\r\n      setTodo([...todo, allInput]);\r\n      setInputData(\"\");\r\n    }\r\n  }\r\n\r\n  function removeAll() {\r\n    setInputData(\"\");\r\n    setIsEdit(false);\r\n    if (todo.length <= 0) {\r\n      alert(\"All Read\");\r\n    } else {\r\n      setTodo([]);\r\n      setComplete([...complete, ...todo]);\r\n    }\r\n  }\r\n\r\n  function editItem(id) {\r\n    setInputData(\"\");\r\n    setIsEdit(true);\r\n    const editItem = todo.find((elem) => {\r\n      return id === elem.id;\r\n    });\r\n    setInputData(editItem.task);\r\n    setEditTodo(id);\r\n  }\r\n\r\n  function removeItem(id) {\r\n    setInputData(\"\");\r\n    setIsEdit(false);\r\n    const addtoDone = todo.find((elem) => {\r\n      return id === elem.id;\r\n    });\r\n    setComplete([...complete, addtoDone]);\r\n\r\n    const newData = todo.filter((elem) => {\r\n      return id !== elem.id;\r\n    });\r\n    setTodo(newData);\r\n  }\r\n\r\n  function removeCompleteItem(id) {\r\n    setInputData(\"\");\r\n    setIsEdit(false);\r\n    const newcData = complete.filter((elem) => {\r\n      return elem.id !== id;\r\n    });\r\n    setComplete(newcData);\r\n\r\n    const addtoDo = complete.find((elem) => {\r\n      return elem.id === id;\r\n    });\r\n    setTodo([...todo, addtoDo]);\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"container\">\r\n        {/* <div className=\"my-4 py-2 my-alert\">\r\n          {isAlert && <Alert type={1} />}\r\n        </div> */}\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <div className=\"card todolist not-done\">\r\n              <h1>Todos</h1>\r\n              <div className=\"input-group mb-3\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control add-todo\"\r\n                  placeholder=\"Add todo\"\r\n                  value={inputData}\r\n                  onChange={(e) => setInputData(e.target.value)}\r\n                />\r\n                <div className=\"input-group-append\">\r\n                  <span className=\"\">\r\n                    {isEdit ? (\r\n                      <button\r\n                        className=\"btn btn-warning rounded-0\"\r\n                        onClick={addTodo}\r\n                      >\r\n                        <i className=\"fa fa-edit\"></i>\r\n                      </button>\r\n                    ) : (\r\n                      <button\r\n                        className=\"btn btn-success rounded-0\"\r\n                        onClick={addTodo}\r\n                      >\r\n                        <i className=\"fa fa-plus\"></i>\r\n                      </button>\r\n                    )}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              <button onClick={removeAll} className=\"btn btn-outline-success\">\r\n                Mark all as done\r\n              </button>\r\n\r\n              <hr />\r\n              <ul id=\"sortable\" className=\"list-unstyled\">\r\n                {!todo.length ? (\r\n                  <h5 className=\"bg-warning text-center\">No data found</h5>\r\n                ) : (\r\n                  todo.map((item) => {\r\n                    return (\r\n                      <li className=\"ui-state-default my-1\" key={item.id}>\r\n                        <div className=\"font-weight-bold checkbox d-flex justify-content-between\">\r\n                          <div>{item.task}</div>\r\n                          <div>\r\n                            <i\r\n                              onClick={() => editItem(item.id)}\r\n                              className=\"mr-3 fa fa-edit text-dark p-2 rounded bg-warning fa-md\"\r\n                            ></i>\r\n                            <i\r\n                              onClick={() => removeItem(item.id)}\r\n                              className=\"fa fa-trash text-light p-2 rounded bg-danger fa-md\"\r\n                            ></i>\r\n                          </div>\r\n                        </div>\r\n                      </li>\r\n                    );\r\n                  })\r\n                )}\r\n              </ul>\r\n              <div className=\"todo-footer\">\r\n                <strong>\r\n                  <span className=\"count-todos\">{todo.length} </span>\r\n                </strong>\r\n                Items Left\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-md-6 p-4 my-2\">\r\n            <div className=\"card p-4 stodolist\">\r\n              <h1>Already Done</h1>\r\n              <ul id=\"done-items\" className=\"list-unstyled\">\r\n                {!complete.length ? (\r\n                  <h5 className=\"bg-warning text-center\">No data found</h5>\r\n                ) : (\r\n                  complete.map((item) => {\r\n                    return (\r\n                      <li\r\n                        className=\"d-flex justify-content-between\"\r\n                        key={item.id}\r\n                      >\r\n                        {item.task}\r\n                        <button className=\"btn btn-outline-success btn-sm py-0 my-0\">\r\n                          <i\r\n                            className=\"fa fa-remove\"\r\n                            onClick={() => removeCompleteItem(item.id)}\r\n                          ></i>\r\n                        </button>\r\n                      </li>\r\n                    );\r\n                  })\r\n                )}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}